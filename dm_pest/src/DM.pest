newline    = _{ "\n" | "\r\n" }
multi_line = _{"\\\n\t\t\t"}
block_comment = _{ "/*" ~ (block_comment | !"*/" ~ ANY)* ~ "*/" }
COMMENT    = _{ ((" " | "\t")* ~ (block_comment |  ("//" ~ (!newline ~ ANY)*) ~ newline))}
WHITESPACE = _{ newline | multi_line | " "}


definition = {"\t"* ~ "#ifdef" ~ (block_comment | !"#endif" ~ ANY)* ~ "#endif" }

identifier = {ASCII_ALPHA ~ (!(newline) ~ ASCII_ALPHA | ASCII_DIGIT | "_" | "/")*}

datum = {"datum" ~ def_obj}
def_obj = {"\t" ~ identifier ~ (def_proc | def_field | definition)+ }

def_field = {indent_2 ~ (var_list | var) ~ assign ~ ((new ~ empty_list | empty_list) | (data))}

def_proc = {indent_2 ~ "proc/" ~ identifier ~ param ~ def_proc_ret}
def_proc_ret = ${ indent_3 ~ "return" ~ (" " ~ number)?}

//TODO! Add multiline
param = {"(" ~ (param_val) ~ (", " ~ param_val)* ~ ")" }
param_val = {identifier}

//Currently ignore proc blocks
proc_m = ${ indent_3 ~ identifier ~ param ~ (!(proc_ret | proc_break) ~ any_line)* ~ (proc_ret | proc_break)}
proc_ret = ${ indent_4 ~ "return" ~ (" "* ~ (number | ((!newline ~ ANY)*) ~ newline))?}
any_line = ${(!newline ~ ANY)* ~ newline}
proc_break = ${newline ~ !(indent_4 | indent_5)}

indent_2 = _{"\t" ~ "\t"}
indent_3 = _{"\t" ~ "\t" ~ "\t"}
indent_4 = _{"\t" ~ "\t" ~ "\t" ~ "\t"}
indent_5 = _{"\t" ~ "\t" ~ "\t" ~ "\t" ~ "\t"}

var = {"var/" ~ identifier}

var_list = {"var/list/" ~ identifier}

new = {"new/"}
empty_list = {"list()"}

list = {"list" ~ "(" ~ element ~ ("," ~ element)* ~ ")" }
element = { quantity | concrete}
quantity = {string ~ assign ~ number}
concrete = {string}

obj = {indent_2 ~ identifier ~ (field | definition)+ }

field = {indent_3 ~ value}

value = { identifier ~ assign ~ (list | data)}

data = {null | bool | num_val | temp_val | file_path | string}

null = _{"null"}
assign = _{"="}

num_val = @{ infinity | float | int}

float = @{ int+ ~ "." ~ int+ }

int = @{("-")? ~ number}

number = @{ ASCII_DIGIT ~ (ASCII_DIGIT)*}

infinity = @{("-")? ~ "INFINITY"}

string = @{ quote ~ inner_str ~ quote }

bool = @{true_val | false_val }
true_val = @{"TRUE"}
false_val = @{"FALSE"}

temp_val = _{"T" ~ number ~ "C" ~ ("+" ~ number) ?}

file_path = {tick ~ (!tick ~ inner_path)* ~ tick}
tick = {"\'"}
inner_path = { !tick ~ ANY ~ (!tick ~ ANY)* }

quote = _{ "\"" }
inner_str = @{ (!("\"" | "\\") ~ ANY)* ~ (escape ~ inner_str)? }
escape    = @{ "\\" ~ ("\"" | "\\" | "r" | "n" | "t" | "0" | "'" ) }

file = {SOI ~ datum? ~ (obj | proc_m | definition)* ~ EOI}

